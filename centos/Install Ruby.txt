https://github.com/gitlabhq/gitlab-recipes/tree/master/install/centos

检查是否安装 ruby 并查看版本号
which ruby

删除 ruby 方法：
yum remove ruby
或者
Remove any other Ruby build if it is still present:
cd <your-ruby-source-path>
make uninstall

Download Ruby and compile it:

mkdir /tmp/ruby && cd /tmp/ruby
curl --progress ftp://ftp.ruby-lang.org/pub/ruby/2.1/ruby-2.1.2.tar.gz | tar xz
cd ruby-2.1.2
./configure --disable-install-rdoc
make
make prefix=/usr/local install

Install the Bundler Gem:
gem install bundler --no-doc

Logout and login again for the $PATH to take effect. 
Check that ruby is properly installed with:

which ruby
# /usr/local/bin/ruby
ruby -v
# ruby 2.1.2p95 (2014-05-08 revision 45877) [x86_64-linux]

解释：

http://henter.me/post/ruby-rvm-gem-rake-bundle-rails.html
整理Ruby相关的各种概念（rvm, gem, bundle, rake, rails等）

最近在看一个Rails项目，渐渐的接触到Ruby语言，
其中有些概念之前比较混乱，模棱两可，相信也有人跟我一样，
刚开始学ruby时对这些概念不太清晰，现在整理一下

Ruby
这个就不用多说了

RVM
用于帮你安装Ruby环境，帮你管理多个Ruby环境，帮你管理你开发的每个Ruby应用使用机器上哪个Ruby环境。Ruby环境不仅仅是Ruby本身，还包括依赖的第三方Ruby插件。都由RVM管理。

Rails
这个也不用多说，著名开发框架。详细看 http://zh.wikipedia.org/wiki/Ruby_on_Rails

RubyGems
RubyGems是一个方便而强大的Ruby程序包管理器（ package manager），类似RedHat的RPM.它将一个Ruby应用程序打包到一个gem里，作为一个安装单元。无需安装，最新的Ruby版本已经包含RubyGems了。

Gem
Gem是封装起来的Ruby应用程序或代码库。

注：在终端使用的gem命令，是指通过RubyGems管理Gem包。

Gemfile
定义你的应用依赖哪些第三方包，bundle根据该配置去寻找这些包。

Rake
Rake是一门构建语言，和make类似。
Rake是用Ruby写的，它支持自己的DSL用来处理和维护Ruby程序。 
Rails用rake扩展来完成多种不容任务，如数据库初始化、更新等

Rakefile
Rakefile是由Ruby编写，Rake的命令执行就是由Rakefile文件定义

Bundle
相当于多个RubyGems批处理运行。
在配置文件gemfilel里说明你的应用依赖哪些第三方包，
他自动帮你下载安装多个包，并且会下载这些包依赖的包。

https://ruby-china.org/topics/2223

gem,rvm,bundle有什么区别啊？
rvm是用来管理ruby的，
ruby的其中一个“程序”叫rubygems，简称 gem，
而用来管理项目的gem的，叫bundle.
完全是不同的东西，他们相同的只是都可以管理gem

https://wiki.archlinux.org/index.php/Ruby_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)

Ruby 是一门专注于简洁和生产里的动态语言, 是解释型语言, 开源编程语言.

gem 是 Ruby 模块 (叫做 Gems) 的包管理器, 
某种程度上是 pacman 相对于 Arch Linux 的角色. 
gem 命令你可以通过遵循上边的操作来得到.

查看已安装有那些 gem:
$ gem list

获取某个 gem 的详细信息:
$ gem spec <gem_name>

默认情况下, gem list 和 gem spec 开启了 --local 选项, 
导致 gem 只会在本地系统里进行搜索. 
这可以用 --remote 参数来覆盖. 这样子以后, 来搜索一个 mysql gem:
$ gem list --remote mysql

安装一个 gem:
$ gem install mysql

安装过程可以加快一点, 如果你不需要本地的文档的话:
$ gem install mysql --no-rdoc --no-ri

更新所有已安装的 gem:
$ gem update

Bundler 帮助你指定你的项目需要使用哪些 gem, 
还有可选地指定哪个版本被需要. 
当声明恰当时, Bundler 会安装所有依赖的 gem (包括整个依赖树), 
后期检查之后还会打印出 log. 
Bundler 默认是安装 gem 到一个共享的路径, 
不过也可以指定直接安装到你的应用. 
当你项目运行的时候, Bundler 就提供每个 gem 正确的版本, 
即便安装的 gem 其实有多个版本. 
这需要有一点工作: 
应用需要以 bundle exec 命令运行, 
还有两行的 boilerplate 代码要被写在你的应用的可执行文件里.