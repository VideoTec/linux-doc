http://pubs.opengroup.org/onlinepubs/7908799/xsh/pthread_mutex_init.html

#include <pthread.h>

int pthread_mutex_init(pthread_mutex_t *mutex, const pthread_mutexattr_t *attr);
int pthread_mutex_destroy(pthread_mutex_t *mutex);
pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;

The pthread_mutex_init() function initialises the mutex referenced by mutex with attributes specified by attr. 
If attr is NULL, the default mutex attributes are used; 
the effect is the same as passing the address of a default mutex attributes object. 
Upon successful initialisation, the state of the mutex becomes initialised and unlocked.
Attempting to initialise an already initialised mutex results in undefined behaviour.

In cases where default mutex attributes are appropriate, 
the macro PTHREAD_MUTEX_INITIALIZER can be used to initialise mutexes that are statically allocated. 
The effect is equivalent to dynamic initialisation 
by a call to pthread_mutex_init() with parameter attr specified as NULL, 
except that no error checks are performed.

返回值：
If successful, the pthread_mutex_init() and pthread_mutex_destroy() functions return zero. 
Otherwise, an error number is returned to indicate the error. 
The [EBUSY] and [EINVAL] error checks, 
if implemented, act as if they were performed immediately 
at the beginning of processing for the function and cause an error 
return prior to modifying the state of the mutex specified by mutex.