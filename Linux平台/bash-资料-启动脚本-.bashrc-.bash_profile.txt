https://zh.wikipedia.org/wiki/Bash

bash启动的时候会运行各种不同的脚本。

当bash作为一个登录的交互shell被调用，
或者作为非交互shell但带有--login参数被调用时，
它首先读入并执行文件/etc/profile。
然后它会依次寻找
~/.bash_profile，
~/.bash_login，和
~/.profile，读入并执行第一个存在且可读的文件。
--noprofile参数可以阻止bash启动时的这种行为。

当一个登录shell退出时，
bash读取并执行~/.bash_logout文件，如果此文件存在。

当一个交互的非登录shell启动后，
bash读取并执行~/.bashrc文件。
这个行为可以用--norc参数阻止。
--rcfile file参数强制bash读取并执行指定的file而不是默认的~/.bashrc。

如果用sh来调用bash，
bash在启动后进入posix模式，
它会尽可能模仿sh历史版本的启动行为，以便遵守POSIX标准。
用sh名字调用的非交互shell不会去读取其他启动脚本，--rcfile参数无效。

当bash以POSIX模式启动时（例如带有--posix参数）它使用POSIX标准来读取启动文件。
在此模式下，交互shells扩展变量ENV，从以此为文件名的文件中读取命令并执行。

bash会探测自己是不是被远程shell守护程序运行（通常是rshd）。
如果是，它会读取并执行~/.bashrc中的命令。
但是rshd一般不会用rc相关参数调用shell，也不会允许指定这些参数。