http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_03_04.html

3.4.2. Brace expansion

Brace expansion is a mechanism by which arbitrary strings may be generated. Patterns to be brace-expanded take the form of an optional PREAMBLE, followed by a series of comma-separated strings between a pair of braces, followed by an optional POSTSCRIPT. The preamble is prefixed to each string contained within the braces, and the postscript is then appended to each resulting string, expanding left to right.

Brace expansions may be nested. The results of each expanded string are not sorted; left to right order is preserved:


franky ~> echo sp{el,il,al}l
spell spill spall

Brace expansion is performed before any other expansions, and any characters special to other expansions are preserved in the result. It is strictly textual. Bash does not apply any syntactic interpretation to the context of the expansion or the text between the braces. To avoid conflicts with parameter expansion, the string "${" is not considered eligible for brace expansion.

A correctly-formed brace expansion must contain unquoted opening and closing braces, and at least one unquoted comma. Any incorrectly formed brace expansion is left unchanged.

http://my.oschina.net/xiangxw/blog/11407
shell中的括号（小括号，大括号/花括号）

http://blog.csdn.net/tttyd/article/details/11742241
shell中的括号（小括号，中括号，大括号）

大括号拓展。(通配(globbing))将对大括号中的文件名做扩展
bogon:/home/bash # ls {ex1,ex2}.sh  
ex1.sh  ex2.sh  
bogon:/home/bash # ls {ex{1..3},ex4}.sh  
ex1.sh  ex2.sh  ex3.sh  ex4.sh  
bogon:/home/bash # ls {ex[1-3],ex4}.sh  
ex1.sh  ex2.sh  ex3.sh  ex4.sh 

代码块，又被称为内部组，这个结构事实上创建了一个匿名函数

几种特殊的替换结构：${var:-string},${var:+string},${var:=string},${var:?string}
四种模式匹配替换结构：${var%pattern},${var%%pattern},${var#pattern},${var##pattern}