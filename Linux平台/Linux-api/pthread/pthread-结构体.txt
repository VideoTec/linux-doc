pthread_t：
------------------------------------------------------------------------------
线程句柄.出于移植目的，不能把它作为整数处理，应使用函数pthread_equal()对两个线程ID进行比较。
获取自身所在线程id使用函数pthread_self()。

------------------------------------------------------------------------------
pthread_attr_t：
------------------------------------------------------------------------------
线程属性。主要包括scope属性、detach属性、堆栈地址、堆栈大小、优先级。主要属性的意义如下：

__detachstate，表示新线程是否与进程中其他线程脱离同步。
PTHREAD_CREATE_DETACHED ，则新线程不能用pthread_join()来同步，且在退出时自行释放所占用的资源。
PTHREAD_CREATE_JOINABLE （缺省）。
可以在线程创建并运行以后用 pthread_detach() 来设置。
一旦设置为 PTHREAD_CREATE_DETACHED 状态，不论是创建时设置还是运行时设置，则不能再恢复到 PTHREAD_CREATE_JOINABLE 状态。

__schedpolicy，
表示新线程的调度策略，包括
SCHED_OTHER  （正常、非实时）、   缺省为 SCHED_OTHER ，后两种调度策略仅对超级用户有效。
SCHED_RR     （实时、轮转法）和
SCHED_FIFO   （实时、先入先出）三种，
运行时可以用过pthread_setschedparam()来改变。

__schedparam，一个struct sched_param结构，
目前仅有一个 sched_priority 整型变量表示线程的运行优先级。
这个参数仅当调度策略为实时（即 SCHED_RR 或 SCHED_FIFO ）时才有效，
并可以在运行时通过 pthread_setschedparam() 函数来改变，缺省为0。
系统支持的最大和最小的优先级值可以用函数sched_get_priority_max和sched_get_priority_min得到。
scheduling[英]['ʃedju:lɪŋ] [美]['ʃedju:lɪŋ] n.行程安排，时序安排；排时间表
priority[英][praɪˈɒrəti] [美][praɪˈɔ:rəti] n.优先，优先权；（时间，序上的）先，前；优先考虑的事；[数]优先次序

__inheritsched，有两种值可供选择：
PTHREAD_EXPLICIT_SCHED  表示新线程使用显式指定调度策略和调度参数（即attr中的值） 缺省为 PTHREAD_EXPLICIT_SCHED 
PTHREAD_INHERIT_SCHED   表示继承调用者线程的值。

__scope，
表示线程间竞争CPU的范围，也就是说线程优先级的有效范围。
POSIX的标准中定义了两个值：
PTHREAD_SCOPE_SYSTEM   表示与系统中所有线程一起竞争CPU时间
PTHREAD_SCOPE_PROCESS  表示仅与同进程中的线程竞争CPU。目前LinuxThreads仅实现了 PTHREAD_SCOPE_SYSTEM 一值。

------------------------------------------------------------------------------
pthread_barrier_t：同步屏障数据类型  barrier[英][ˈbæriə(r)] [美][ˈbæriɚ]n.障碍；屏障；栅栏；分界线
------------------------------------------------------------------------------

------------------------------------------------------------------------------
pthread_mutex_t：mutex数据类型
------------------------------------------------------------------------------

------------------------------------------------------------------------------
pthread_cond_t：条件变量数据类型
------------------------------------------------------------------------------